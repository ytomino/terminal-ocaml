HOST:=$(shell $(CC) -dumpmachine)
TARGET=$(HOST)

ifneq ($(TARGET),$(HOST))
 PROGRAMPREFIX=$(TARGET)-
else
 PROGRAMPREFIX=
endif

OCAMLC=$(PROGRAMPREFIX)ocamlc
OCAMLOPT=$(if $(OCAMLC),$(OCAMLC:c=opt),$(PROGRAMPREFIX)ocamlopt)

OCAMLLIBDIR:=$(shell $(or $(OCAMLC),$(OCAMLOPT)) -where)
include $(OCAMLLIBDIR)/Makefile.config

PREFIX=$(abspath $(OCAMLLIBDIR)/../..)
ifeq ($(PREFIX),$(abspath $(OCAMLLIBDIR)/../..))
 LIBDIR=$(abspath $(OCAMLLIBDIR)/..)
else
 LIBDIR=$(PREFIX)/lib
endif
DESTDIR=
INSTALLDIR=$(addsuffix /,$(DESTDIR))$(LIBDIR)/ocaml

BUILDSUFFIX=.noindex
BUILDDIR=$(TARGET)$(BUILDSUFFIX)

DLLPREFIX=$(patsubst $(addsuffix /,$(DESTDIR))%,%,$(INSTALLDIR))/stublibs
ifeq ($(DLLPREFIX),$(OCAMLLIBDIR)/stublibs)
 DLLIB=$(addprefix -dllib -l,$(STUBLIBNAME))
else
 DLLIB=$(patsubst %,-dllib $(DLLPREFIX)/dll%$(EXT_DLL),$(STUBLIBNAME))
endif
SLLIB=$(addprefix -cclib -l,$(STUBLIBNAME))

ML_MODULES=$(basename $(MLSRC))
MLI_MODULES=$(basename $(MLI))
MLONLY_MODULES=$(filter-out $(MLI_MODULES),$(ML_MODULES))
ML_MODULESB=$(basename $(MLINIT))

MLCMO=$(patsubst %,$(BUILDDIR)/%.cmo,$(ML_MODULES))
MLONLY_MLCMO=$(patsubst %,$(BUILDDIR)/%.cmo,$(MLONLY_MODULES))
MLCMOB=$(patsubst %,$(BUILDDIR)/%.cmo,$(ML_MODULESB))
MLCMX=$(patsubst %,$(BUILDDIR)/%.cmx,$(ML_MODULES))
MLONLY_MLCMX=$(patsubst %,$(BUILDDIR)/%.cmx,$(MLONLY_MODULES))
MLOBJ=$(patsubst %,$(BUILDDIR)/%.o,$(ML_MODULES))
MLCMI=$(patsubst %,$(BUILDDIR)/%.cmi,$(sort $(MLI_MODULES) $(ML_MODULES)))
MLCMIB=$(patsubst %,$(BUILDDIR)/%.cmi,$(ML_MODULESB))

COBJ=$(patsubst %,$(BUILDDIR)/%.o,$(basename $(CSRC)))
CDLL=$(patsubst %,$(BUILDDIR)/dll%$(EXT_DLL),$(STUBLIBNAME))
CSLL=$(patsubst %,$(BUILDDIR)/lib%.a,$(STUBLIBNAME))

OCAMLC_CFLAGS_ALL=$(strip \
                    $(OCAMLC_CFLAGS) \
                    $(if $(filter-out $(OCAMLC_CFLAGS),$(CFLAGS)),$(CFLAGS)) \
                    $(if $(filter-out $(OCAMLC_CFLAGS),$(SHAREDLIB_CFLAGS)), \
                      $(SHAREDLIB_CFLAGS)))

MKDLL_ALL=$(strip $(MKDLL) $(if $(filter-out $(MKDLL),$(LDFLAGS)),$(LDFLAGS)))

BUILD:=$(shell $(CC) -dumpmachine)
HOST=$(BUILD)
TARGET=$(HOST)

BUILDSUFFIX=.noindex
BUILDDIR:=$(TARGET)$(BUILDSUFFIX)

PROGRAMPREFIX:=$(addsuffix -,$(filter-out $(BUILD),$(TARGET)))

OCAMLC=$(PROGRAMPREFIX)ocamlc
OCAMLOPT=$(or $(OCAMLC:c=opt),$(PROGRAMPREFIX)ocamlopt)

OCAMLLIBDIR:=$(shell $(or $(OCAMLC),$(OCAMLOPT)) -where)
include $(OCAMLLIBDIR)/Makefile.config

PREFIX=$(exec_prefix)
LIBDIR=$(or \
         $(and $(filter-out $(exec_prefix),$(PREFIX)),$(PREFIX)/lib), \
         $(abspath $(OCAMLLIBDIR)/..))
DESTDIR=
INSTALLDIR=$(addsuffix /,$(DESTDIR))$(LIBDIR)/ocaml

DLLPREFIX=$(patsubst $(addsuffix /,$(DESTDIR))%,%,$(INSTALLDIR))/stublibs
DLLIB=$(and $(STUBLIBNAME), \
        -dllib $(or \
                 $(and $(filter-out $(OCAMLLIBDIR)/stublibs,$(DLLPREFIX)), \
                   $(DLLPREFIX)/dll$(STUBLIBNAME)$(EXT_DLL)), \
                 -l$(STUBLIBNAME)))
SLLIB=$(addprefix -cclib -l,$(STUBLIBNAME))

ML_MODULES=$(basename $(MLSRC))
MLI_MODULES=$(basename $(MLI))
MLONLY_MODULES=$(filter-out $(MLI_MODULES),$(ML_MODULES))
ML_MODULESB=$(basename $(MLINIT))

PAIRED_MLCMI=$(patsubst %,$(BUILDDIR)/%.cmi,$(MLI_MODULES))
MLONLY_MLCMI=$(patsubst %,$(BUILDDIR)/%.cmi,$(MLONLY_MODULES))

MLCMO=$(patsubst %,$(BUILDDIR)/%.cmo,$(ML_MODULES))
MLCMOB=$(patsubst %,$(BUILDDIR)/%.cmo,$(ML_MODULESB))
MLCMX=$(patsubst %,$(BUILDDIR)/%.cmx,$(ML_MODULES))
MLOBJ=$(patsubst %,$(BUILDDIR)/%.o,$(ML_MODULES))
MLCMI=$(patsubst %,$(BUILDDIR)/%.cmi,$(sort $(MLI_MODULES) $(ML_MODULES)))
MLCMIB=$(patsubst %,$(BUILDDIR)/%.cmi,$(ML_MODULESB))

COBJ=$(patsubst %,$(BUILDDIR)/%.o,$(basename $(CSRC)))
CDLL=$(patsubst %,$(BUILDDIR)/dll%$(EXT_DLL),$(STUBLIBNAME))
CSLL=$(patsubst %,$(BUILDDIR)/lib%.a,$(STUBLIBNAME))

OCAMLC_CFLAGS_ALL=$(strip \
                    $(OCAMLC_CFLAGS) \
                    $(and $(filter-out $(OCAMLC_CFLAGS),$(CFLAGS)),$(CFLAGS)) \
                    $(and $(filter-out $(OCAMLC_CFLAGS),$(SHAREDLIB_CFLAGS)), \
                      $(SHAREDLIB_CFLAGS)))

MKDLL_ALL=$(strip $(MKDLL) $(and $(filter-out $(MKDLL),$(LDFLAGS)),$(LDFLAGS)))

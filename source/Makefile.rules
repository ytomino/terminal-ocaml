.PHONY: all clean install uninstall

all: \
	$(if $(OCAMLC),$(BUILDDIR)/$(LIBNAME).cma) \
	$(if $(OCAMLOPT),$(BUILDDIR)/$(LIBNAME).cmxa)

$(BUILDDIR)/%.cmi: %.mli | $(BUILDDIR)
	$(or $(OCAMLC),$(OCAMLOPT)) -c -I $(BUILDDIR) $(OCAMLCFLAGS) -o $@ $<

$(filter-out $(MLONLY_MLCMO),$(MLCMO)): $(BUILDDIR)/%.cmo: \
		%.ml $(BUILDDIR)/%.cmi
	$(OCAMLC) -c -I $(BUILDDIR) $(OCAMLCFLAGS) -o $@ $<

$(filter-out $(MLONLY_MLCMX),$(MLCMX)): $(BUILDDIR)/%.cmx: \
		%.ml $(BUILDDIR)/%.cmi
	$(OCAMLOPT) -c -I $(BUILDDIR) $(OCAMLCFLAGS) -o $@ $<

ifneq ($(and $(OCAMLC),$(OCAMLOPT)),)
$(BUILDDIR)/%.cmo $(BUILDDIR)/%.cmx $(BUILDDIR)/%.cmi&: %.ml | $(BUILDDIR)
	$(OCAMLC) -c -I $(BUILDDIR) $(OCAMLCFLAGS) -w -70 -o $(basename $@).cmo $<
	$(if $(filter $(MLONLY_MODULES),$(basename $<)), \
		$(OCAMLOPT) -c -I $(BUILDDIR) $(OCAMLCFLAGS) -w -70 -o $(basename $@).cmx $<)
else
$(BUILDDIR)/%.cmo $(BUILDDIR)/%.cmi&:: %.ml | $(BUILDDIR)
	$(OCAMLC) -c -I $(BUILDDIR) $(OCAMLCFLAGS) -w -70 -o $(basename $@).cmo $<

$(BUILDDIR)/%.cmx $(BUILDDIR)/%.cmi&:: %.ml | $(BUILDDIR)
	$(OCAMLOPT) -c -I $(BUILDDIR) $(OCAMLCFLAGS) -w -70 -o $(basename $@).cmx $<
endif

$(BUILDDIR)/%.o: %.c | $(BUILDDIR)
	$(CC) -c -isystem "$(OCAMLLIBDIR)" $(OCAMLC_CFLAGS_ALL) -o $@ $<

$(BUILDDIR)/$(LIBNAME).cma: $(MLCMO) $(MLCMOB) $(MLCMI) $(MLCMIB) $(CDLL)
	$(OCAMLC) -a -o $@ $(MLCMO) $(MLCMOB) $(DLLIB) $(CCLIB)

$(BUILDDIR)/$(LIBNAME).cmxa: $(MLCMX) $(MLCMI) $(CSLL)
	$(OCAMLOPT) -a -o $@ $(MLCMX) $(SLLIB) $(CCLIB)

ifneq ($(STUBLIBNAME),)
$(BUILDDIR)/dll$(STUBLIBNAME)$(EXT_DLL): $(COBJ)
	$(MKDLL_ALL) -o $@ $< $(LDLIB)

$(BUILDDIR)/lib$(STUBLIBNAME).a: $(COBJ)
	$(ARCMD) rcs $@ $<
endif

$(BUILDDIR):
	mkdir -p $@

clean:
	-rm $(BUILDDIR)/$(LIBNAME).cma
	-rm $(BUILDDIR)/$(LIBNAME).a
	-rm $(BUILDDIR)/$(LIBNAME).cmxa
	-rm $(MLCMI) $(MLCMIB) $(MLCMO) $(MLCMOB) $(MLCMX) $(MLOBJ)
ifneq ($(STUBLIBNAME),)
	-rm $(BUILDDIR)/dll$(STUBLIBNAME)$(EXT_DLL)
	-rm $(BUILDDIR)/lib$(STUBLIBNAME).a
	-rm $(COBJ)
endif
	-rmdir $(BUILDDIR)

install: all | \
		$(if $(and $(OCAMLC),$(STUBLIBNAME)),$(INSTALLDIR)/stublibs,$(INSTALLDIR))
	cp $(MLCMI) $(INSTALLDIR)
ifneq ($(OCAMLC),)
ifneq ($(MLCMIB),)
	cp $(MLCMIB) $(INSTALLDIR)
endif
	cp $(BUILDDIR)/$(LIBNAME).cma $(INSTALLDIR)
ifneq ($(STUBLIBNAME),)
	cp $(BUILDDIR)/dll$(STUBLIBNAME)$(EXT_DLL) $(INSTALLDIR)/stublibs
endif
endif
ifneq ($(OCAMLOPT),)
	cp $(MLCMX) $(INSTALLDIR)
	cp $(BUILDDIR)/$(LIBNAME).a $(INSTALLDIR)
	cp $(BUILDDIR)/$(LIBNAME).cmxa $(INSTALLDIR)
ifneq ($(STUBLIBNAME),)
	cp $(BUILDDIR)/lib$(STUBLIBNAME).a $(INSTALLDIR)
endif
endif

$(INSTALLDIR)/stublibs:
	mkdir -p $(INSTALLDIR)/stublibs

$(INSTALLDIR):
	mkdir -p $(INSTALLDIR)

uninstall:
	-rm $(addprefix $(INSTALLDIR)/,$(notdir $(MLCMI)))
ifneq ($(OCAMLC),)
ifneq ($(MLCMIB),)
	-rm $(addprefix $(INSTALLDIR)/,$(notdir $(MLCMIB)))
endif
	-rm $(INSTALLDIR)/$(LIBNAME).cma
ifneq ($(STUBLIBNAME),)
	-rm $(INSTALLDIR)/stublibs/dll$(STUBLIBNAME)$(EXT_DLL)
endif
endif
ifneq ($(OCAMLOPT),)
	-rm $(addprefix $(INSTALLDIR)/,$(notdir $(MLCMX)))
	-rm $(INSTALLDIR)/$(LIBNAME).a
	-rm $(INSTALLDIR)/$(LIBNAME).cmxa
ifneq ($(STUBLIBNAME),)
	-rm $(INSTALLDIR)/lib$(STUBLIBNAME).a
endif
endif
